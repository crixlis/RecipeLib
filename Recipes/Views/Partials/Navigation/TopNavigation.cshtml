@inherits Umbraco.Web.Mvc.UmbracoViewPage
@using Umbraco.Web;
@{
    var site = Model.Root();
    var selection = site?.Children.Where(x => x.IsVisible() &&
        !x.IsDocumentType(RecipeFolder.ModelTypeAlias));
}

@if (selection != null && selection.Any())
{
    <nav class="navbar navbar-default">
        <div class="container-fluid">
            <!-- For mobile display -->
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="#">Recipe website</a>
            </div>

            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav">
                    @foreach (var item in selection)
                    {
                        var visibleChildren = item.Children().Where(x =>
                            !x.IsDocumentType(RecipeFolder.ModelTypeAlias) &&
                            !x.IsDocumentType(RecipeFolder.ModelTypeAlias) &&
                            x.Value<bool>("UmbracoNavihide") == false);

                        if (visibleChildren.Any())
                        {
                            <li class="dropdown">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">@item.Name<span class="caret"></span></a>
                                <ul class="dropdown-menu">
                                    @foreach (var child in visibleChildren)
                                    {       
                                        <li><a class="nav-link @(item.IsAncestorOrSelf(Model) ? "nav-link--active" : null)" href="@child.Url">@child.Name</a></li>
                                    }
                                </ul>
                            </li>
                        }
                        else
                        {
                            <li><a class="nav-link @(item.IsAncestorOrSelf(Model) ? "nav-link--active" : null)" href="@item.Url">@item.Name</a></li>
                        }
                    }
                </ul>
            </div>
        </div>
    </nav>
}
